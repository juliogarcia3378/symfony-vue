<?php
/**
 * Venue
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * OpenParty API
 *
 * Move your app forward with the OpenParty API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * Venue Class Doc Comment
 *
 * @category    Class
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Venue implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'Venue';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'venue_id' => 'int',
        'venue_type' => 'string',
        'venue_title' => 'string',
        'venue_display_title' => 'string',
        'venue_description' => 'string',
        'venue_features' => 'string',
        'venue_policy' => 'string',
        'neighborhood' => 'string',
        'address_street' => 'string',
        'address_city' => 'string',
        'address_state' => 'string',
        'address_postal_code' => 'string',
        'address_country' => 'string',
        'temporarily_closed' => 'string',
        'operating_hours' => 'string',
        'operating_hours_list' => 'string',
        'check_in_time' => 'string',
        'venue_area_size' => 'string',
        'capacity' => 'string',
        'age_minimum' => 'string',
        'crowd_type' => 'string',
        'dress_code' => 'string',
        'price_rating' => 'string',
        'music_genres' => 'string',
        'venue_rooms' => 'string',
        'venue_facebook' => 'string',
        'venue_instagram' => 'string',
        'venue_logo' => 'string',
        'venue_videos' => 'string',
        'venue_images' => 'string'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'venue_id' => 'venue_id',
        'venue_type' => 'venue_type',
        'venue_title' => 'venue_title',
        'venue_display_title' => 'venue_display_title',
        'venue_description' => 'venue_description',
        'venue_features' => 'venue_features',
        'venue_policy' => 'venue_policy',
        'neighborhood' => 'neighborhood',
        'address_street' => 'address_street',
        'address_city' => 'address_city',
        'address_state' => 'address_state',
        'address_postal_code' => 'address_postal_code',
        'address_country' => 'address_country',
        'temporarily_closed' => 'temporarily_closed',
        'operating_hours' => 'operating_hours',
        'operating_hours_list' => 'operating_hours_list',
        'check_in_time' => 'check_in_time',
        'venue_area_size' => 'venue_area_size',
        'capacity' => 'capacity',
        'age_minimum' => 'age_minimum',
        'crowd_type' => 'crowd_type',
        'dress_code' => 'dress_code',
        'price_rating' => 'price_rating',
        'music_genres' => 'music_genres',
        'venue_rooms' => 'venue_rooms',
        'venue_facebook' => 'venue_facebook',
        'venue_instagram' => 'venue_instagram',
        'venue_logo' => 'venue_logo',
        'venue_videos' => 'venue_videos',
        'venue_images' => 'venue_images'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'venue_id' => 'setVenueId',
        'venue_type' => 'setVenueType',
        'venue_title' => 'setVenueTitle',
        'venue_display_title' => 'setVenueDisplayTitle',
        'venue_description' => 'setVenueDescription',
        'venue_features' => 'setVenueFeatures',
        'venue_policy' => 'setVenuePolicy',
        'neighborhood' => 'setNeighborhood',
        'address_street' => 'setAddressStreet',
        'address_city' => 'setAddressCity',
        'address_state' => 'setAddressState',
        'address_postal_code' => 'setAddressPostalCode',
        'address_country' => 'setAddressCountry',
        'temporarily_closed' => 'setTemporarilyClosed',
        'operating_hours' => 'setOperatingHours',
        'operating_hours_list' => 'setOperatingHoursList',
        'check_in_time' => 'setCheckInTime',
        'venue_area_size' => 'setVenueAreaSize',
        'capacity' => 'setCapacity',
        'age_minimum' => 'setAgeMinimum',
        'crowd_type' => 'setCrowdType',
        'dress_code' => 'setDressCode',
        'price_rating' => 'setPriceRating',
        'music_genres' => 'setMusicGenres',
        'venue_rooms' => 'setVenueRooms',
        'venue_facebook' => 'setVenueFacebook',
        'venue_instagram' => 'setVenueInstagram',
        'venue_logo' => 'setVenueLogo',
        'venue_videos' => 'setVenueVideos',
        'venue_images' => 'setVenueImages'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'venue_id' => 'getVenueId',
        'venue_type' => 'getVenueType',
        'venue_title' => 'getVenueTitle',
        'venue_display_title' => 'getVenueDisplayTitle',
        'venue_description' => 'getVenueDescription',
        'venue_features' => 'getVenueFeatures',
        'venue_policy' => 'getVenuePolicy',
        'neighborhood' => 'getNeighborhood',
        'address_street' => 'getAddressStreet',
        'address_city' => 'getAddressCity',
        'address_state' => 'getAddressState',
        'address_postal_code' => 'getAddressPostalCode',
        'address_country' => 'getAddressCountry',
        'temporarily_closed' => 'getTemporarilyClosed',
        'operating_hours' => 'getOperatingHours',
        'operating_hours_list' => 'getOperatingHoursList',
        'check_in_time' => 'getCheckInTime',
        'venue_area_size' => 'getVenueAreaSize',
        'capacity' => 'getCapacity',
        'age_minimum' => 'getAgeMinimum',
        'crowd_type' => 'getCrowdType',
        'dress_code' => 'getDressCode',
        'price_rating' => 'getPriceRating',
        'music_genres' => 'getMusicGenres',
        'venue_rooms' => 'getVenueRooms',
        'venue_facebook' => 'getVenueFacebook',
        'venue_instagram' => 'getVenueInstagram',
        'venue_logo' => 'getVenueLogo',
        'venue_videos' => 'getVenueVideos',
        'venue_images' => 'getVenueImages'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['venue_id'] = isset($data['venue_id']) ? $data['venue_id'] : null;
        $this->container['venue_type'] = isset($data['venue_type']) ? $data['venue_type'] : null;
        $this->container['venue_title'] = isset($data['venue_title']) ? $data['venue_title'] : null;
        $this->container['venue_display_title'] = isset($data['venue_display_title']) ? $data['venue_display_title'] : null;
        $this->container['venue_description'] = isset($data['venue_description']) ? $data['venue_description'] : null;
        $this->container['venue_features'] = isset($data['venue_features']) ? $data['venue_features'] : null;
        $this->container['venue_policy'] = isset($data['venue_policy']) ? $data['venue_policy'] : null;
        $this->container['neighborhood'] = isset($data['neighborhood']) ? $data['neighborhood'] : null;
        $this->container['address_street'] = isset($data['address_street']) ? $data['address_street'] : null;
        $this->container['address_city'] = isset($data['address_city']) ? $data['address_city'] : null;
        $this->container['address_state'] = isset($data['address_state']) ? $data['address_state'] : null;
        $this->container['address_postal_code'] = isset($data['address_postal_code']) ? $data['address_postal_code'] : null;
        $this->container['address_country'] = isset($data['address_country']) ? $data['address_country'] : null;
        $this->container['temporarily_closed'] = isset($data['temporarily_closed']) ? $data['temporarily_closed'] : null;
        $this->container['operating_hours'] = isset($data['operating_hours']) ? $data['operating_hours'] : null;
        $this->container['operating_hours_list'] = isset($data['operating_hours_list']) ? $data['operating_hours_list'] : null;
        $this->container['check_in_time'] = isset($data['check_in_time']) ? $data['check_in_time'] : null;
        $this->container['venue_area_size'] = isset($data['venue_area_size']) ? $data['venue_area_size'] : null;
        $this->container['capacity'] = isset($data['capacity']) ? $data['capacity'] : null;
        $this->container['age_minimum'] = isset($data['age_minimum']) ? $data['age_minimum'] : null;
        $this->container['crowd_type'] = isset($data['crowd_type']) ? $data['crowd_type'] : null;
        $this->container['dress_code'] = isset($data['dress_code']) ? $data['dress_code'] : null;
        $this->container['price_rating'] = isset($data['price_rating']) ? $data['price_rating'] : null;
        $this->container['music_genres'] = isset($data['music_genres']) ? $data['music_genres'] : null;
        $this->container['venue_rooms'] = isset($data['venue_rooms']) ? $data['venue_rooms'] : null;
        $this->container['venue_facebook'] = isset($data['venue_facebook']) ? $data['venue_facebook'] : null;
        $this->container['venue_instagram'] = isset($data['venue_instagram']) ? $data['venue_instagram'] : null;
        $this->container['venue_logo'] = isset($data['venue_logo']) ? $data['venue_logo'] : null;
        $this->container['venue_videos'] = isset($data['venue_videos']) ? $data['venue_videos'] : null;
        $this->container['venue_images'] = isset($data['venue_images']) ? $data['venue_images'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets venue_id
     * @return int
     */
    public function getVenueId()
    {
        return $this->container['venue_id'];
    }

    /**
     * Sets venue_id
     * @param int $venue_id Venue Id.
     * @return $this
     */
    public function setVenueId($venue_id)
    {
        $this->container['venue_id'] = $venue_id;

        return $this;
    }

    /**
     * Gets venue_type
     * @return string
     */
    public function getVenueType()
    {
        return $this->container['venue_type'];
    }

    /**
     * Sets venue_type
     * @param string $venue_type Venue Type.
     * @return $this
     */
    public function setVenueType($venue_type)
    {
        $this->container['venue_type'] = $venue_type;

        return $this;
    }

    /**
     * Gets venue_title
     * @return string
     */
    public function getVenueTitle()
    {
        return $this->container['venue_title'];
    }

    /**
     * Sets venue_title
     * @param string $venue_title Venue Title.
     * @return $this
     */
    public function setVenueTitle($venue_title)
    {
        $this->container['venue_title'] = $venue_title;

        return $this;
    }

    /**
     * Gets venue_display_title
     * @return string
     */
    public function getVenueDisplayTitle()
    {
        return $this->container['venue_display_title'];
    }

    /**
     * Sets venue_display_title
     * @param string $venue_display_title Venue Display Name.
     * @return $this
     */
    public function setVenueDisplayTitle($venue_display_title)
    {
        $this->container['venue_display_title'] = $venue_display_title;

        return $this;
    }

    /**
     * Gets venue_description
     * @return string
     */
    public function getVenueDescription()
    {
        return $this->container['venue_description'];
    }

    /**
     * Sets venue_description
     * @param string $venue_description Venue Description.
     * @return $this
     */
    public function setVenueDescription($venue_description)
    {
        $this->container['venue_description'] = $venue_description;

        return $this;
    }

    /**
     * Gets venue_features
     * @return string
     */
    public function getVenueFeatures()
    {
        return $this->container['venue_features'];
    }

    /**
     * Sets venue_features
     * @param string $venue_features an Array of features.
     * @return $this
     */
    public function setVenueFeatures($venue_features)
    {
        $this->container['venue_features'] = $venue_features;

        return $this;
    }

    /**
     * Gets venue_policy
     * @return string
     */
    public function getVenuePolicy()
    {
        return $this->container['venue_policy'];
    }

    /**
     * Sets venue_policy
     * @param string $venue_policy Venue Policy.
     * @return $this
     */
    public function setVenuePolicy($venue_policy)
    {
        $this->container['venue_policy'] = $venue_policy;

        return $this;
    }

    /**
     * Gets neighborhood
     * @return string
     */
    public function getNeighborhood()
    {
        return $this->container['neighborhood'];
    }

    /**
     * Sets neighborhood
     * @param string $neighborhood Short Description of Area .
     * @return $this
     */
    public function setNeighborhood($neighborhood)
    {
        $this->container['neighborhood'] = $neighborhood;

        return $this;
    }

    /**
     * Gets address_street
     * @return string
     */
    public function getAddressStreet()
    {
        return $this->container['address_street'];
    }

    /**
     * Sets address_street
     * @param string $address_street Street Address for the Venue.
     * @return $this
     */
    public function setAddressStreet($address_street)
    {
        $this->container['address_street'] = $address_street;

        return $this;
    }

    /**
     * Gets address_city
     * @return string
     */
    public function getAddressCity()
    {
        return $this->container['address_city'];
    }

    /**
     * Sets address_city
     * @param string $address_city City Name.
     * @return $this
     */
    public function setAddressCity($address_city)
    {
        $this->container['address_city'] = $address_city;

        return $this;
    }

    /**
     * Gets address_state
     * @return string
     */
    public function getAddressState()
    {
        return $this->container['address_state'];
    }

    /**
     * Sets address_state
     * @param string $address_state State location for the venue.
     * @return $this
     */
    public function setAddressState($address_state)
    {
        $this->container['address_state'] = $address_state;

        return $this;
    }

    /**
     * Gets address_postal_code
     * @return string
     */
    public function getAddressPostalCode()
    {
        return $this->container['address_postal_code'];
    }

    /**
     * Sets address_postal_code
     * @param string $address_postal_code Zip Code for the venue.
     * @return $this
     */
    public function setAddressPostalCode($address_postal_code)
    {
        $this->container['address_postal_code'] = $address_postal_code;

        return $this;
    }

    /**
     * Gets address_country
     * @return string
     */
    public function getAddressCountry()
    {
        return $this->container['address_country'];
    }

    /**
     * Sets address_country
     * @param string $address_country Country Code.
     * @return $this
     */
    public function setAddressCountry($address_country)
    {
        $this->container['address_country'] = $address_country;

        return $this;
    }

    /**
     * Gets temporarily_closed
     * @return string
     */
    public function getTemporarilyClosed()
    {
        return $this->container['temporarily_closed'];
    }

    /**
     * Sets temporarily_closed
     * @param string $temporarily_closed Venue Policy.
     * @return $this
     */
    public function setTemporarilyClosed($temporarily_closed)
    {
        $this->container['temporarily_closed'] = $temporarily_closed;

        return $this;
    }

    /**
     * Gets operating_hours
     * @return string
     */
    public function getOperatingHours()
    {
        return $this->container['operating_hours'];
    }

    /**
     * Sets operating_hours
     * @param string $operating_hours Weekly interval for operating list.
     * @return $this
     */
    public function setOperatingHours($operating_hours)
    {
        $this->container['operating_hours'] = $operating_hours;

        return $this;
    }

    /**
     * Gets operating_hours_list
     * @return string
     */
    public function getOperatingHoursList()
    {
        return $this->container['operating_hours_list'];
    }

    /**
     * Sets operating_hours_list
     * @param string $operating_hours_list Array of operation hours.
     * @return $this
     */
    public function setOperatingHoursList($operating_hours_list)
    {
        $this->container['operating_hours_list'] = $operating_hours_list;

        return $this;
    }

    /**
     * Gets check_in_time
     * @return string
     */
    public function getCheckInTime()
    {
        return $this->container['check_in_time'];
    }

    /**
     * Sets check_in_time
     * @param string $check_in_time Checking time.
     * @return $this
     */
    public function setCheckInTime($check_in_time)
    {
        $this->container['check_in_time'] = $check_in_time;

        return $this;
    }

    /**
     * Gets venue_area_size
     * @return string
     */
    public function getVenueAreaSize()
    {
        return $this->container['venue_area_size'];
    }

    /**
     * Sets venue_area_size
     * @param string $venue_area_size Venue Policy.
     * @return $this
     */
    public function setVenueAreaSize($venue_area_size)
    {
        $this->container['venue_area_size'] = $venue_area_size;

        return $this;
    }

    /**
     * Gets capacity
     * @return string
     */
    public function getCapacity()
    {
        return $this->container['capacity'];
    }

    /**
     * Sets capacity
     * @param string $capacity Capacity for the Venue.
     * @return $this
     */
    public function setCapacity($capacity)
    {
        $this->container['capacity'] = $capacity;

        return $this;
    }

    /**
     * Gets age_minimum
     * @return string
     */
    public function getAgeMinimum()
    {
        return $this->container['age_minimum'];
    }

    /**
     * Sets age_minimum
     * @param string $age_minimum Minimum age allowed in the venue.
     * @return $this
     */
    public function setAgeMinimum($age_minimum)
    {
        $this->container['age_minimum'] = $age_minimum;

        return $this;
    }

    /**
     * Gets crowd_type
     * @return string
     */
    public function getCrowdType()
    {
        return $this->container['crowd_type'];
    }

    /**
     * Sets crowd_type
     * @param string $crowd_type Crowd Type Details.
     * @return $this
     */
    public function setCrowdType($crowd_type)
    {
        $this->container['crowd_type'] = $crowd_type;

        return $this;
    }

    /**
     * Gets dress_code
     * @return string
     */
    public function getDressCode()
    {
        return $this->container['dress_code'];
    }

    /**
     * Sets dress_code
     * @param string $dress_code Array of dress code details.
     * @return $this
     */
    public function setDressCode($dress_code)
    {
        $this->container['dress_code'] = $dress_code;

        return $this;
    }

    /**
     * Gets price_rating
     * @return string
     */
    public function getPriceRating()
    {
        return $this->container['price_rating'];
    }

    /**
     * Sets price_rating
     * @param string $price_rating Price Rating value.
     * @return $this
     */
    public function setPriceRating($price_rating)
    {
        $this->container['price_rating'] = $price_rating;

        return $this;
    }

    /**
     * Gets music_genres
     * @return string
     */
    public function getMusicGenres()
    {
        return $this->container['music_genres'];
    }

    /**
     * Sets music_genres
     * @param string $music_genres Array of music genres.
     * @return $this
     */
    public function setMusicGenres($music_genres)
    {
        $this->container['music_genres'] = $music_genres;

        return $this;
    }

    /**
     * Gets venue_rooms
     * @return string
     */
    public function getVenueRooms()
    {
        return $this->container['venue_rooms'];
    }

    /**
     * Sets venue_rooms
     * @param string $venue_rooms Array of rooms for the venues with, capacity, description.
     * @return $this
     */
    public function setVenueRooms($venue_rooms)
    {
        $this->container['venue_rooms'] = $venue_rooms;

        return $this;
    }

    /**
     * Gets venue_facebook
     * @return string
     */
    public function getVenueFacebook()
    {
        return $this->container['venue_facebook'];
    }

    /**
     * Sets venue_facebook
     * @param string $venue_facebook Venue Facebook Account.
     * @return $this
     */
    public function setVenueFacebook($venue_facebook)
    {
        $this->container['venue_facebook'] = $venue_facebook;

        return $this;
    }

    /**
     * Gets venue_instagram
     * @return string
     */
    public function getVenueInstagram()
    {
        return $this->container['venue_instagram'];
    }

    /**
     * Sets venue_instagram
     * @param string $venue_instagram Venue Instagram Account.
     * @return $this
     */
    public function setVenueInstagram($venue_instagram)
    {
        $this->container['venue_instagram'] = $venue_instagram;

        return $this;
    }

    /**
     * Gets venue_logo
     * @return string
     */
    public function getVenueLogo()
    {
        return $this->container['venue_logo'];
    }

    /**
     * Sets venue_logo
     * @param string $venue_logo Venue Logo.
     * @return $this
     */
    public function setVenueLogo($venue_logo)
    {
        $this->container['venue_logo'] = $venue_logo;

        return $this;
    }

    /**
     * Gets venue_videos
     * @return string
     */
    public function getVenueVideos()
    {
        return $this->container['venue_videos'];
    }

    /**
     * Sets venue_videos
     * @param string $venue_videos Array of venues videos.
     * @return $this
     */
    public function setVenueVideos($venue_videos)
    {
        $this->container['venue_videos'] = $venue_videos;

        return $this;
    }

    /**
     * Gets venue_images
     * @return string
     */
    public function getVenueImages()
    {
        return $this->container['venue_images'];
    }

    /**
     * Sets venue_images
     * @param string $venue_images Array of venue images.
     * @return $this
     */
    public function setVenueImages($venue_images)
    {
        $this->container['venue_images'] = $venue_images;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


